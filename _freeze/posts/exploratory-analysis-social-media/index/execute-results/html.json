{
  "hash": "1b83b48fce05fa338a27dda26aa6686f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Data Cleaning Series :: Exploring Social Media Addiction Data\"\nauthor: \"Robert Muwanga\"\ndate: \"2025-07-22\"\ncategories: [data-cleaning, data-exploration]\ndraft: false\n---\n\n\n\n\n\n## Background to the Data Cleaning Series\n\n![](data-cleaning.png){fig-alt=\"Trying to clean data with soap\" fig-align=\"center\" width=\"60%\"}\n\nI was asked to teach a class on how to import, clean and transform data in R and as part of the training. We did several exercises to help re-enforce the basics and, given that it was well received, I decided to document these exercises in a series that I'm calling the **Data Cleaning Series**.\n\nIt will also serve as a journal for me to refer to when (being human) I forget üòÖ.\n\nIf you haven't done so yet I recommend you read my brief entry on [tidy data](https://rjmuwanga.netlify.app/posts/tidy-data/) as we shall endeavour to put our data in this format throughout the series.\n\n## About the dataset - Social Media Addiction Analysis\n\nFor this exercise, we are leveraging on the Social Media Addiction dataset provided by [Anil Shamim](https://www.kaggle.com/datasets/adilshamim8/social-media-addiction-vs-relationships/data) from the Kaggle Platform.\n\nThe data set is a set of anonymized records of students‚Äô social media behaviors and related life outcomes, spanning multiple countries and background. Each row represents one student‚Äôs survey response, offering a cross‚Äêsectional snapshot suitable for statistical analysis and machine‚Äêlearning applications.\n\nFor full details of the dataset, I would encourage you to visit the site and view its Data Card.\n\nMake sure you download the data set and save it on your machine (you might need a free Kaggle account to get it).\n\nLet's import it in and do a bit of exploration to get to know it better:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsocial_media_data <- read_csv('Students_Social_Media_Addiction.csv')\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 705 Columns: 13\n‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nDelimiter: \",\"\nchr (6): Gender, Academic_Level, Country, Most_Used_Platform, Affects_Academ...\ndbl (7): Student_ID, Age, Avg_Daily_Usage_Hours, Sleep_Hours_Per_Night, Ment...\n\n‚Ñπ Use `spec()` to retrieve the full column specification for this data.\n‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nsocial_media_data\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 705 √ó 13\n   Student_ID   Age Gender Academic_Level Country     Avg_Daily_Usage_Hours\n        <dbl> <dbl> <chr>  <chr>          <chr>                       <dbl>\n 1          1    19 Female Undergraduate  Bangladesh                    5.2\n 2          2    22 Male   Graduate       India                         2.1\n 3          3    20 Female Undergraduate  USA                           6  \n 4          4    18 Male   High School    UK                            3  \n 5          5    21 Male   Graduate       Canada                        4.5\n 6          6    19 Female Undergraduate  Australia                     7.2\n 7          7    23 Male   Graduate       Germany                       1.5\n 8          8    20 Female Undergraduate  Brazil                        5.8\n 9          9    18 Male   High School    Japan                         4  \n10         10    21 Female Graduate       South Korea                   3.3\n# ‚Ñπ 695 more rows\n# ‚Ñπ 7 more variables: Most_Used_Platform <chr>,\n#   Affects_Academic_Performance <chr>, Sleep_Hours_Per_Night <dbl>,\n#   Mental_Health_Score <dbl>, Relationship_Status <chr>,\n#   Conflicts_Over_Social_Media <dbl>, Addicted_Score <dbl>\n```\n\n\n:::\n:::\n\n\n\nFrom the output, we notice that the dataset has 705 variables and 13 observations. Given that we have the Data Caard that outlines the expected values for each variable, we can validate the information to make sure that it conforms to what was expected:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Let's build the validation engine based on the rules on the Data Card.\nvalidation_rules <- validator(\n  is_unique(Student_ID), \n  Age > 0, \n  Gender %in% c(\"Male\", \"Female\"), \n  Academic_Level %in% c(\"High School\", \"Undergraduate\", \"Graduate\"), \n  in_range(Avg_Daily_Usage_Hours, 0, 24),\n  Affects_Academic_Performance %in% c(\"Yes\", \"No\"),\n  Sleep_Hours_Per_Night > 0,\n  in_range(Mental_Health_Score, 1, 10),\n  Relationship_Status %in% c(\"Single\", \"In Relationship\", \"Complicated\"),\n  Conflicts_Over_Social_Media >= 0,\n  in_range(Addicted_Score, 1, 10),\n  is.character(Country), \n  is.character(Most_Used_Platform)\n)\n\n# Let's validate and assess the output.\nconfront(social_media_data, validation_rules)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nObject of class 'validation'\nCall:\n    confront(dat = social_media_data, x = validation_rules)\n\nRules confronted: 13\n   With fails   : 0\n   With missings: 0\n   Threw warning: 0\n   Threw error  : 0\n```\n\n\n:::\n:::\n\n\n\nFrom the output, it is clear that all the variables satisfy the set constraints. However, as a sanity check for Country and Most_Used_Platform, let's print out their unique values to see whether they are a good representation of what currently exists:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Let's just view the unique value of the Country variable\n\nsocial_media_data |> \n  select(Country) |> \n  unique() |> \n  pull()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  [1] \"Bangladesh\"      \"India\"           \"USA\"             \"UK\"             \n  [5] \"Canada\"          \"Australia\"       \"Germany\"         \"Brazil\"         \n  [9] \"Japan\"           \"South Korea\"     \"France\"          \"Spain\"          \n [13] \"Italy\"           \"Mexico\"          \"Russia\"          \"China\"          \n [17] \"Sweden\"          \"Norway\"          \"Denmark\"         \"Netherlands\"    \n [21] \"Belgium\"         \"Switzerland\"     \"Austria\"         \"Portugal\"       \n [25] \"Greece\"          \"Ireland\"         \"New Zealand\"     \"Singapore\"      \n [29] \"Malaysia\"        \"Thailand\"        \"Vietnam\"         \"Philippines\"    \n [33] \"Indonesia\"       \"Taiwan\"          \"Hong Kong\"       \"Turkey\"         \n [37] \"Israel\"          \"UAE\"             \"Egypt\"           \"Morocco\"        \n [41] \"South Africa\"    \"Nigeria\"         \"Kenya\"           \"Ghana\"          \n [45] \"Argentina\"       \"Chile\"           \"Colombia\"        \"Peru\"           \n [49] \"Venezuela\"       \"Ecuador\"         \"Uruguay\"         \"Paraguay\"       \n [53] \"Bolivia\"         \"Costa Rica\"      \"Panama\"          \"Jamaica\"        \n [57] \"Trinidad\"        \"Bahamas\"         \"Iceland\"         \"Finland\"        \n [61] \"Poland\"          \"Romania\"         \"Hungary\"         \"Czech Republic\" \n [65] \"Slovakia\"        \"Croatia\"         \"Serbia\"          \"Slovenia\"       \n [69] \"Bulgaria\"        \"Estonia\"         \"Latvia\"          \"Lithuania\"      \n [73] \"Ukraine\"         \"Moldova\"         \"Belarus\"         \"Kazakhstan\"     \n [77] \"Uzbekistan\"      \"Kyrgyzstan\"      \"Tajikistan\"      \"Armenia\"        \n [81] \"Georgia\"         \"Azerbaijan\"      \"Cyprus\"          \"Malta\"          \n [85] \"Luxembourg\"      \"Monaco\"          \"Andorra\"         \"San Marino\"     \n [89] \"Vatican City\"    \"Liechtenstein\"   \"Montenegro\"      \"Albania\"        \n [93] \"North Macedonia\" \"Kosovo\"          \"Bosnia\"          \"Qatar\"          \n [97] \"Kuwait\"          \"Bahrain\"         \"Oman\"            \"Jordan\"         \n[101] \"Lebanon\"         \"Iraq\"            \"Yemen\"           \"Syria\"          \n[105] \"Afghanistan\"     \"Pakistan\"        \"Nepal\"           \"Bhutan\"         \n[109] \"Sri Lanka\"       \"Maldives\"       \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Let's just view the unique values of Most_Used_Platform variable\n\nsocial_media_data |> \n  select(Most_Used_Platform) |> \n  unique() |> \n  pull()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Instagram\" \"Twitter\"   \"TikTok\"    \"YouTube\"   \"Facebook\"  \"LinkedIn\" \n [7] \"Snapchat\"  \"LINE\"      \"KakaoTalk\" \"VKontakte\" \"WhatsApp\"  \"WeChat\"   \n```\n\n\n:::\n:::\n\n\n\nWe can see that both outputs seem reasonable.\n\nFrom the data, we can also infer that Academic_Level is an **ordered factor variable.** Although not necessary for this exercise, it aids the presentation to have results using this variable in a chronological order. Let's fix this:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsocial_media_data <- social_media_data |> \n  mutate(\n    Academic_Level = fct(Academic_Level, \n                         levels = c(\"High School\", \"Undergraduate\", \"Graduate\"))\n  )\n  \nglimpse(social_media_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 705\nColumns: 13\n$ Student_ID                   <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13‚Ä¶\n$ Age                          <dbl> 19, 22, 20, 18, 21, 19, 23, 20, 18, 21, 1‚Ä¶\n$ Gender                       <chr> \"Female\", \"Male\", \"Female\", \"Male\", \"Male‚Ä¶\n$ Academic_Level               <fct> Undergraduate, Graduate, Undergraduate, H‚Ä¶\n$ Country                      <chr> \"Bangladesh\", \"India\", \"USA\", \"UK\", \"Cana‚Ä¶\n$ Avg_Daily_Usage_Hours        <dbl> 5.2, 2.1, 6.0, 3.0, 4.5, 7.2, 1.5, 5.8, 4‚Ä¶\n$ Most_Used_Platform           <chr> \"Instagram\", \"Twitter\", \"TikTok\", \"YouTub‚Ä¶\n$ Affects_Academic_Performance <chr> \"Yes\", \"No\", \"Yes\", \"No\", \"Yes\", \"Yes\", \"‚Ä¶\n$ Sleep_Hours_Per_Night        <dbl> 6.5, 7.5, 5.0, 7.0, 6.0, 4.5, 8.0, 6.0, 6‚Ä¶\n$ Mental_Health_Score          <dbl> 6, 8, 5, 7, 6, 4, 9, 6, 7, 7, 5, 6, 8, 5,‚Ä¶\n$ Relationship_Status          <chr> \"In Relationship\", \"Single\", \"Complicated‚Ä¶\n$ Conflicts_Over_Social_Media  <dbl> 3, 0, 4, 1, 2, 5, 0, 2, 1, 1, 3, 2, 1, 4,‚Ä¶\n$ Addicted_Score               <dbl> 8, 3, 9, 4, 7, 9, 2, 8, 5, 4, 7, 8, 4, 9,‚Ä¶\n```\n\n\n:::\n:::\n\n\n\nAdditional data cleaning may be needed but we shall further clean as part of answering the questions.\n\nLet's proceed to answering the questions!\n\n### Question 1\n\n#### What is the total number of male and female students by country?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsocial_media_data |> \n  summarise(total = n(), .by = Gender) |> \n  mutate(\n    perc_gender = round(\n      total / sum(total) * 100, 2))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 √ó 3\n  Gender total perc_gender\n  <chr>  <int>       <dbl>\n1 Female   353        50.1\n2 Male     352        49.9\n```\n\n\n:::\n:::\n\n\n\nWe can see that its an almost equal split between the Female and the Male gender - 50.07% against 49.93% respectively.\n\n### Question 2\n\n#### Which social media platform is associated with affecting the largest number of students by Academic Level?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsocial_media_data |> \n  group_by(Academic_Level, Most_Used_Platform) |> \n  summarise(\n    count = n()) |> \n  arrange(\n    desc(count)) |> # Data is still grouped allowing us to order each group by the count\n  slice_head(n = 1) |> \n  ungroup() # Remove groupings. Although not necessary at this point, its a good habit.\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'Academic_Level'. You can override using\nthe `.groups` argument.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 √ó 3\n  Academic_Level Most_Used_Platform count\n  <fct>          <chr>              <int>\n1 High School    Instagram             12\n2 Undergraduate  Instagram            155\n3 Graduate       Facebook              87\n```\n\n\n:::\n:::\n\n\n\nGiven that we ordered the factors for Academic Level, we can see that its chronologically ordered in the output. We notice that two social media platforms stand out as popular - *Instagram* for High School and Undergraduate, and *Facebook* for Graduate.\n\n### Question 3\n\n#### Show a table of countries showing the average sleep hours per night of High School students, with countries ordered from the least amount of sleep to the most.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsocial_media_data |> \n  filter(Academic_Level == \"High School\") |> \n  select(Country, Sleep_Hours_Per_Night) |> \n  summarise(Avg_Sleep_Hours = mean(Sleep_Hours_Per_Night), \n            .by = Country) |> \n  arrange(Avg_Sleep_Hours)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 27 √ó 2\n   Country        Avg_Sleep_Hours\n   <chr>                    <dbl>\n 1 UAE                        5.1\n 2 Ireland                    5.2\n 3 Ecuador                    5.2\n 4 Trinidad                   5.2\n 5 Czech Republic             5.2\n 6 Armenia                    5.2\n 7 Liechtenstein              5.2\n 8 Lebanon                    5.2\n 9 Thailand                   5.3\n10 Argentina                  5.3\n# ‚Ñπ 17 more rows\n```\n\n\n:::\n:::\n\n\n\nFrom the results, we can see that the UAE has the lowest average sleep per night at only 5.1 hours.\n\n### Question 4\n\n#### Find the average addiction score for each country. Include the country's respective continent and order the table in descending order by the country's average addiction score\n\nThis is an interesting problem. Given that the dataset requires continents, we will need another dataset having a listing of countries in their respective continent, and then perform a join in order to allow us find the average addiction score per country with their respective continent.\n\nRather than manually creating the file, we will scour the internet to find a dataset that is relatively up-to-date and reliable and import it into our environment.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Let's first download the continent dataset and extract the columns of interest\n# (we will also extract the Capital column as this is needed for Question 6)\n\ncountries_continents <- \n  read_delim(\n    file = 'https://www.countrycode.org/countryCode/downloadCountryCodes', \n    col_select = c(\"Country Name\", \"Continent\", \"Capital\"), \n    delim = ',') |>\n  janitor::clean_names()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 240 Columns: 3\n‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nDelimiter: \",\"\nchr (3): Country Name, Continent, Capital\n\n‚Ñπ Use `spec()` to retrieve the full column specification for this data.\n‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\n# Let's see whether there are any countries from our social media dataset that is missing from our continent dataset\n\nsocial_media_data |> \n  anti_join(\n    countries_continents, \n    join_by(Country == country_name)) |> \n  select(Country) |> \n  unique()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7 √ó 1\n  Country        \n  <chr>          \n1 USA            \n2 UK             \n3 UAE            \n4 Trinidad       \n5 Vatican City   \n6 North Macedonia\n7 Bosnia         \n```\n\n\n:::\n:::\n\n\n\nForm the output, we can see that there are 7 countries that exist in our social media dataset that do not match our continent dataset. In principle, these countries do exist but possibly in a different structure.\n\nLet's see whether we can find them.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncountries_continents |>\n  select(country_name) |> \n  mutate(\n    found = str_detect(\n      string = country_name, \n      pattern = \"United|Trinidad|Vatican|Macedonia|Bosnia\")\n  ) |> \n  filter(found)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7 √ó 2\n  country_name           found\n  <chr>                  <lgl>\n1 Bosnia and Herzegovina TRUE \n2 Macedonia              TRUE \n3 Trinidad and Tobago    TRUE \n4 United Arab Emirates   TRUE \n5 United Kingdom         TRUE \n6 United States          TRUE \n7 Vatican                TRUE \n```\n\n\n:::\n:::\n\n\n\nThis proved our hypothesis that the countries did indeed exist in our continent dataset but under a different name. Now that we know what names they are written in, we can clean our social media dataset to match the appropriate names so that our joins work properly.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Let's manually clean up those countries in our social media dataset\n# so that they match our continent dataset. \n\nsocial_media_data <- social_media_data |>\n  mutate(\n    Country = case_when(\n      str_detect(Country, \"USA\") ~ \"United States\",\n      str_detect(Country, \"UK\") ~ \"United Kingdom\", \n      str_detect(Country, \"UAE\") ~ \"United Arab Emirates\", \n      str_detect(Country, \"Vatican City\") ~ \"Vatican\",\n      str_detect(Country, \"North Macedonia\") ~ \"Macedonia\", \n      str_detect(Country, \"Trinidad\") ~ \"Trinidad and Tobago\", \n      str_detect(Country, \"Bosnia\") ~ \"Bosnia and Herzegovina\", \n      TRUE ~ Country\n    ))\n\n# Let's see whether the countries have been replaced\n\nsocial_media_data |> \n  select(Country) |> \n  arrange(Country) |>\n  unique() |> \n  pull()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  [1] \"Afghanistan\"            \"Albania\"                \"Andorra\"               \n  [4] \"Argentina\"              \"Armenia\"                \"Australia\"             \n  [7] \"Austria\"                \"Azerbaijan\"             \"Bahamas\"               \n [10] \"Bahrain\"                \"Bangladesh\"             \"Belarus\"               \n [13] \"Belgium\"                \"Bhutan\"                 \"Bolivia\"               \n [16] \"Bosnia and Herzegovina\" \"Brazil\"                 \"Bulgaria\"              \n [19] \"Canada\"                 \"Chile\"                  \"China\"                 \n [22] \"Colombia\"               \"Costa Rica\"             \"Croatia\"               \n [25] \"Cyprus\"                 \"Czech Republic\"         \"Denmark\"               \n [28] \"Ecuador\"                \"Egypt\"                  \"Estonia\"               \n [31] \"Finland\"                \"France\"                 \"Georgia\"               \n [34] \"Germany\"                \"Ghana\"                  \"Greece\"                \n [37] \"Hong Kong\"              \"Hungary\"                \"Iceland\"               \n [40] \"India\"                  \"Indonesia\"              \"Iraq\"                  \n [43] \"Ireland\"                \"Israel\"                 \"Italy\"                 \n [46] \"Jamaica\"                \"Japan\"                  \"Jordan\"                \n [49] \"Kazakhstan\"             \"Kenya\"                  \"Kosovo\"                \n [52] \"Kuwait\"                 \"Kyrgyzstan\"             \"Latvia\"                \n [55] \"Lebanon\"                \"Liechtenstein\"          \"Lithuania\"             \n [58] \"Luxembourg\"             \"Macedonia\"              \"Malaysia\"              \n [61] \"Maldives\"               \"Malta\"                  \"Mexico\"                \n [64] \"Moldova\"                \"Monaco\"                 \"Montenegro\"            \n [67] \"Morocco\"                \"Nepal\"                  \"Netherlands\"           \n [70] \"New Zealand\"            \"Nigeria\"                \"Norway\"                \n [73] \"Oman\"                   \"Pakistan\"               \"Panama\"                \n [76] \"Paraguay\"               \"Peru\"                   \"Philippines\"           \n [79] \"Poland\"                 \"Portugal\"               \"Qatar\"                 \n [82] \"Romania\"                \"Russia\"                 \"San Marino\"            \n [85] \"Serbia\"                 \"Singapore\"              \"Slovakia\"              \n [88] \"Slovenia\"               \"South Africa\"           \"South Korea\"           \n [91] \"Spain\"                  \"Sri Lanka\"              \"Sweden\"                \n [94] \"Switzerland\"            \"Syria\"                  \"Taiwan\"                \n [97] \"Tajikistan\"             \"Thailand\"               \"Trinidad and Tobago\"   \n[100] \"Turkey\"                 \"Ukraine\"                \"United Arab Emirates\"  \n[103] \"United Kingdom\"         \"United States\"          \"Uruguay\"               \n[106] \"Uzbekistan\"             \"Vatican\"                \"Venezuela\"             \n[109] \"Vietnam\"                \"Yemen\"                 \n```\n\n\n:::\n:::\n\n\n\nFrom the list, we can see that they have been appropriately replaced.\n\nLet's now do our join and effectively answer the question.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsocial_media_data |> \n  left_join(countries_continents, join_by(Country == country_name)) |>\n  select(continent, Country, Addicted_Score) |> \n  summarise(\n    avg_addicted_score = round(mean(Addicted_Score), 2), \n    .by = c(continent, Country)) |> \n  arrange(desc(avg_addicted_score))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 110 √ó 3\n   continent     Country              avg_addicted_score\n   <chr>         <chr>                             <dbl>\n 1 South America Ecuador                            9   \n 2 Europe        Czech Republic                     9   \n 3 Asia          Armenia                            9   \n 4 Europe        Liechtenstein                      9   \n 5 Asia          Lebanon                            9   \n 6 North America United States                      8.6 \n 7 Asia          United Arab Emirates               8.12\n 8 Europe        Norway                             8   \n 9 Europe        Belgium                            8   \n10 Europe        Portugal                           8   \n# ‚Ñπ 100 more rows\n```\n\n\n:::\n:::\n\n\n\nFrom the list, we can see that the countries with the highest average addiction score (9.0) include Ecuador (South America), Czech Republic (Europe), Armenia (Asia) and Liechtenstein (Europe).\n\n### Question 5\n\n#### Which gender per country and continent is the most lonely? Assume \"being lonely\" are those in a relationship status of \"Single\" and \"Complicated\".\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsocial_media_data |> \n  select(\n    Country, Gender, Relationship_Status) |> \n  filter(\n    # Only focusing on Single and Complicated Relationships\n    Relationship_Status %in% c(\"Single\", \"Complicated\")) |>\n  summarise(\n    # Count the number of respondents by Country and Gender\n    total = n(),\n    .by = c(\"Country\", \"Gender\")) |> \n  mutate(\n    # Not necessary but its good to see what % of men and women per country are within \n    # this relationship status grouping\n    perc_total = total / sum(total) * 100, \n    .by = Country\n  ) |> \n  filter(\n    # Filter the gender having the largest number of singles and complicated relationships\n    # in each Country.\n    total == max(total), \n    .by = Country) |> \n  left_join(\n    # And let's get the continent information into the final result.\n    countries_continents, \n    join_by(\n      Country == country_name)) |> \n  select(\n    # Select what we need to see\n    continent, Country, Gender, total, perc_total) |> \n  arrange(desc(total)) # And order the results by number of individuals\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 85 √ó 5\n   continent     Country        Gender total perc_total\n   <chr>         <chr>          <chr>  <int>      <dbl>\n 1 North America Canada         Male      28       90.3\n 2 Europe        Ireland        Female    23       85.2\n 3 Europe        Spain          Female    22       84.6\n 4 Asia          Turkey         Male      22       81.5\n 5 North America Mexico         Male      22       81.5\n 6 Europe        Switzerland    Female    18      100  \n 7 Asia          Japan          Female    16       76.2\n 8 Europe        Poland         Male      12       75  \n 9 Europe        United Kingdom Male      11       73.3\n10 Asia          Bangladesh     Female    10       55.6\n# ‚Ñπ 75 more rows\n```\n\n\n:::\n:::\n\n\n\nFrom the data, we can see that Canadian men are more lonely than their women counterparts, with approximately 9 in 10 identifying as Single or in a Complicated relationship.\n\nThis is followed by Ireland and Spain in 2nd and 3rd place with Women identifying as Single or in a Complicated relationship (consituting approximately 85% of the respondents from each of those countries).\n\n### Question 6\n\n#### Which capital city (and country) has the most number of students \"In Relationship\"?\n\nWe can leverage the same thought process as in Question 5, but tweak it slightly.\n\n**PS:** For the enlightened, this would probably constitute the need for a function to avoid duplicated code but we shall cross that bridge in another write-up!\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsocial_media_data |> \n  select(\n    Country, Gender, Relationship_Status) |> \n  filter(\n    # THE FIRST TWEAK! Changing the relationship type\n    Relationship_Status %in% c(\"In Relationship\")) |>\n  summarise(\n    # Count the number of respondents by Country and Gender\n    total = n(),\n    .by = c(\"Country\", \"Gender\")) |> \n  mutate(\n    # Not necessary but its good to see what % of men and women per country are within \n    # this relationship status grouping\n    perc_total = total / sum(total) * 100, \n    .by = Country\n  ) |> \n  filter(\n    # Filter the gender having the largest number of singles and complicated relationships\n    # in each Country.\n    total == max(total), \n    .by = Country) |> \n  left_join(\n    # SECOND TWEAK - Let's get the CAPITAL CITY information into the final result.\n    countries_continents, \n    join_by(\n      Country == country_name)) |> \n  select(\n    # Select what we need to see\n    Country, capital, Gender, total, perc_total) |> \n  arrange(desc(total)) # And order the results by number of individuals\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 49 √ó 5\n   Country              capital    Gender total perc_total\n   <chr>                <chr>      <chr>  <int>      <dbl>\n 1 India                New Delhi  Male      28       65.1\n 2 United States        Washington Female    28       87.5\n 3 Denmark              Copenhagen Male      22       84.6\n 4 France               Paris      Female    21       87.5\n 5 China                Beijing    Male      11       73.3\n 6 Pakistan             Islamabad  Male      10       55.6\n 7 Maldives             Male       Male      10       58.8\n 8 Italy                Rome       Male      10       71.4\n 9 United Arab Emirates Abu Dhabi  Female     8      100  \n10 South Korea          Seoul      Female     7      100  \n# ‚Ñπ 39 more rows\n```\n\n\n:::\n:::\n\n\n\nFrom the data, we can see that India and the United States - with its' capital cities as New Delhi and Washington respectively - is leading the pack, with 28 of the males and females identifying as in a relationship. This constitutes to approximately 65% and 88% of the total respondents by respective country.\n\n### Question 7\n\n#### Determine the most popular social media platform in each country and continent\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopular_social_media_results <- social_media_data |> \n  select(\n    Country, Most_Used_Platform) |> \n  summarise(\n    # Count the number of social media platform selected by respondents \n    # by Country\n    total = n(),\n    .by = c(Country, Most_Used_Platform)) |> \n  filter(\n    # Filter the most popular social media platform for each country\n    total == max(total), \n    .by = Country) |> \n  left_join(\n    # Let's get the continent information into the final result.\n    countries_continents, \n    join_by(\n      Country == country_name)) |> \n  select(\n    # Select what we need to see\n    continent, Country, Most_Used_Platform, total) |> \n  arrange(desc(total)) # And order the results by number of individuals\n\npopular_social_media_results\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 110 √ó 4\n   continent     Country       Most_Used_Platform total\n   <chr>         <chr>         <chr>              <int>\n 1 Asia          India         WhatsApp              25\n 2 Europe        France        Instagram             22\n 3 Europe        Switzerland   Instagram             20\n 4 Europe        Denmark       Facebook              19\n 5 North America United States Instagram             19\n 6 Asia          Pakistan      Instagram             18\n 7 North America Mexico        WhatsApp              18\n 8 North America Canada        Instagram             17\n 9 Europe        Ireland       Instagram             16\n10 Asia          China         WeChat                15\n# ‚Ñπ 100 more rows\n```\n\n\n:::\n:::\n\n\n\nFrom this, we can see the most popular social media platform by country. India lists as having WhatsApp as the most popular from the respondents, with France and Italy reporting Instagram as their most popular.\n\nWe can further aggregate this result by continent to see which platform is the most popular.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopular_social_media_results |> \n  summarise(\n    total = sum(total), \n    .by = c(continent, Most_Used_Platform)\n  ) |> \n  filter(\n    total == max(total), \n    .by = continent)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 11 √ó 3\n   continent     Most_Used_Platform total\n   <chr>         <chr>              <int>\n 1 Europe        Instagram             80\n 2 North America Instagram             37\n 3 Asia          Instagram             57\n 4 Oceania       Instagram             12\n 5 South America WhatsApp               4\n 6 Africa        YouTube                1\n 7 Africa        TikTok                 1\n 8 Africa        LinkedIn               1\n 9 Africa        Instagram              1\n10 Africa        Facebook               1\n11 Africa        Snapchat               1\n```\n\n\n:::\n:::\n\n\n\nIn Europe, Instagram has a clear lead with over 80 European respondents claiming the social media platform is their most used. North America, Asia and Oceania report the same platform while South America has WhatsApp. Interestingly, Africa seems to have no preference, with almost all being just as popular as the other.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}